services:
#  elasticsearch:
#    image: elasticsearch:7.17.12
#    container_name: elasticsearch
#    environment:
#      - discovery.type=single-node
#    ports:
#      - "9200:9200"
#    volumes:
#      - elasticsearch-data:/usr/share/elasticsearch/data
#    networks:
#      - main_network
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - main_network

  golang-service:
    container_name: golang-service
    build:
      context: ./golang-gin-ddd-structure-example
      dockerfile: Dockerfile-dev
      args:
        - ENV_FILE=.env
    volumes:
      - ./golang-gin-ddd-structure-example:/app
    networks:
      - main_network
    depends_on:
      - mysql
    ports:
      - "8000:8000"
    restart: on-failure

  django-service:
    container_name: django-service
    build:
      context: ./django-service
      dockerfile: Dockerfile
      args:
        - ENV_FILE=.env
    networks:
      - main_network
    depends_on:
      - mysql
#      - elasticsearch
    ports:
      - "8080:8080"
    volumes:
      - ./django-service:/app
    restart: on-failure
    environment:
      - ELASTIC_HOST=http://elasticsearch:9200
#  gitlab:
#    deploy:
#      resources:
#        limits:
#          cpus: '2'
#          memory: 4096M
#    image: gitlab/gitlab-ce:latest
#    container_name: gitlab
#    restart: unless-stopped
#    hostname: git.developeryar-local.ir
#    environment:
#      GITLAB_OMNIBUS_CONFIG: |
#        external_url 'http://git.developeryar-local.ir'
#        gitlab_rails['gitlab_shell_ssh_port'] = 2222
#    ports:
#      - "2222:22"
#    volumes:
#      - gitlab_config:/etc/gitlab
#      - gitlab_logs:/var/log/gitlab
#      - gitlab_data:/var/opt/gitlab
#    networks:
#      - main_network
  users-service:
    build: ./users-service
    container_name: users-service
    restart: unless-stopped
    volumes:
      - ./users-service:/var/www
    networks:
      - main_network
    depends_on:
      - mysql
      - redis

  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - main_network

  products-service:
    build: ./products-service
    container_name: products-service
    restart: unless-stopped
    volumes:
      - ./products-service:/var/www
    networks:
      - main_network
    depends_on:
      - mysql

  notification-service:
    build: ./notification-service
    container_name: notification-service
    restart: unless-stopped
    volumes:
      - ./notification-service:/var/www
    networks:
      - main_network
    depends_on:
      - mysql

#  yii2-basic-service:
#    build: ./yii2-basic
#    container_name: yii2-basic
#    restart: unless-stopped
#    volumes:
#      - ./yii2-basic:/var/www
#    networks:
#      - main_network
#    depends_on:
#      - mysql

  order-service:
    build: ./orders-service
    deploy:
      replicas: 2
    restart: unless-stopped
    volumes:
      - ./orders-service:/var/www
    networks:
      - main_network
    depends_on:
      - mysql
  mysql:
    image: mysql:8
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: three_services
      MYSQL_PASSWORD:
    networks:
      - main_network
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - /etc/ssl/developeryar-local.ir:/etc/nginx/ssl:ro
    networks:
      - main_network
    depends_on:
#      - gitlab
      - users-service
      - products-service
      - order-service
      - golang-service
      - django-service

networks:
  main_network:
    driver: bridge
    attachable: true
    name: main_network
    external: false
volumes:
  elasticsearch-data:
  mysql_data:
    driver: local
  #gitlab_config:
  #gitlab_logs:
  #gitlab_data: